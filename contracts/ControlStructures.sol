// SPDX-License-Identifier: MIT
pragma solidity 0.8.17;

contract ControlStructures {
    /// @notice Returns string "Fizz", "Buzz", "FizzBuzz" or "Splat" following the FizzBuzz rules.
    /// @dev "Fizz" if the _number is divisible by 3. 
    ///      "Buzz" if the _number is divisible by 5.
    ///      "FizzBuzz" if the _number is divisible by 3 and 5.
    ///      "Splat" if none of the above conditions are true.
    /// @param _number The number to run against the FizzBuzz rules.
    /// @return The string generated by running `_number` against the FizzBuzz rules.
    function fizzBuzz(uint _number) external pure returns (string memory) {
        if (_number % 3 == 0) {
            if (_number % 5 == 0) {
                return "FizzBuzz";
            }
            return "Fizz";
        } else if (_number % 5 == 0) {
            return "Buzz";
        }   
        return "Splat";
    }

    error AfterHours(uint time);

    /// @notice Returns string "At lunch!", "Morning!", "Afternoon!", "Evening!",
    ///         or reverts with [AfterHours] error,
    ///         or triggers a panic
    ///         based on the [_time] input and the set of rules.
    /// @dev If [_time] is greater than or equal to 2400, trigger a panic.
    ///      If [_time] is greater than 2200 or less than 800, revert with a custom error of AfterHours,
    ///      and include the time provided.
    ///      If [_time] is between 800 and 1199, return "Morning!".
    ///      If [_time] is between 1200 and 1259, revert with a string message "At lunch!".
    ///      If [_time] is between 1300 and 1799, return "Afternoon!".
    ///      If [_time] is between 1800 and 2200, return "Evening!".
    ///      
    /// @param _time The time to check against the "Do not disturb" rules.
    /// @return The string "Do not disturb" string corresponding to the `_time`.
    function doNotDisturb(uint _time) external pure returns (string memory) {
        assert(_time < 2400);

        if(_time < 800 || _time > 2200) {
            revert AfterHours(_time);
        }

        if(_time < 800) {
            revert AfterHours(_time);
        }

        if (_time >= 800 && _time <= 1199) {
            return "Morning!";
        } else if (_time >= 1200 && _time <= 1259) {
            return "At lunch!";
        } else if (_time >= 1300 && _time <= 1799) {
            return "Afternoon!";
        } else {
            return "Evening!";
        }
    }
}
